#!/usr/bin/env python
# -*- encoding: utf-8 -*-

import spidev
from time import sleep

'''
0x80 ==> 0
0xf8 ==> 1

If the first line is all 0xf8, the final value is 11111111, 
    indicating that the brightness of G is 0xff, that is, 255.
If the first row is all 0x80, then the final value is 00000000, 
    which means the brightness of G is 0x00, which is 0, and goes out.
'''

class WS2812B:

    def __init__(self, bus, device, speed):

        self.spi = spidev.SpiDev()
        #bus , device
        self.spi.open(bus, device)
        self.spi.max_speed_hz = speed * 1000000
        self.spi.mode = 0b1
        self.spi.xfer([0x00])

        self.led_off = [
            # led1 off
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led2
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led3 off
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led4 off
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led5 off
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led6 off
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led7 off
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led8 off
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
        ]

        self.led_on = [
        
            # led1 on, 0 ~ 23
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led2 on, 24 ~ 45
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8,
            0x80, 0x80, 0x80, 0x08, 0x08, 0x80, 0x80, 0x80,
            0x08, 0x80, 0x08, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led3 on
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8,
            0x80, 0x80, 0x80, 0x08, 0x08, 0x80, 0x80, 0x80,
            0x08, 0x80, 0x08, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led4 on
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8,
            0x80, 0x80, 0x80, 0x08, 0x08, 0x80, 0x80, 0x80,
            0x08, 0x80, 0x08, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led5 on
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8,
            0x80, 0x80, 0x80, 0x08, 0x08, 0x80, 0x80, 0x80,
            0x08, 0x80, 0x08, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led6 on
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8,
            0x80, 0x80, 0x80, 0x08, 0x08, 0x80, 0x80, 0x80,
            0x08, 0x80, 0x08, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led7 on
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8,
            0x80, 0x80, 0x80, 0x08, 0x08, 0x80, 0x80, 0x80,
            0x08, 0x80, 0x08, 0x80, 0x80, 0x80, 0x80, 0x80,

            # led8 on
            0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8,
            0x80, 0x80, 0x80, 0x08, 0x08, 0x80, 0x80, 0x80,
            0x08, 0x80, 0x08, 0x80, 0x80, 0x80, 0x80, 0x80,
        ]

    def light_in_order(self):
        print("light in order")
        a = 0
        x = 23
        while a < 8 :
            self.spi.xfer(self.led_on[0:x:1])
            sleep(1)
            x += 24
            a += 1


    def all_led_off(self):
        sleep(0.5)
        self.spi.xfer(self.led_off)

if __name__ == "__main__" :
    led = WS2812B(1, 0, 64)
    led.light_in_order()
    led.all_led_off()
